line,id,speaker,text,ami_label,link,relationship,api_labels,topic,entities
1,0,Programmer,hi,be-pos,,,,,
2,1,Apiza,"Hello, I'm Apiza.",be-pos,0,POS,,,
2,2,Apiza, Let me know if you have any questions about the LibSSH API.,offer,,,,,
3,3,Programmer,libssh connect to localhost,eli-sugg,,,patterns,,
4,4,Programmer,hi Apiza,be-pos,1,POS,,,
5,5,Apiza,Here is a function that might help with connecting to localhost:\n\n,sugg-info-all,3,POS,patterns,,
5,6,Apiza,```\nint ssh_connect\t(\tssh_session \tsession\t)\n\n,sugg-info-all,5,CONT,basic,ssh_connect,
5,7,Apiza,Description\nConnect to the ssh server.\n\n,sugg-info-all,6,CONT,basic,ssh_connect,
5,8,Apiza,Parameters\nsession: The ssh session to connect.\n\n,sugg-info-all,7,CONT,basic,ssh_connect,
5,9,Apiza,"Returns\nSSH_OK on success, SSH_ERROR on error.\nSSH_AGAIN, if the session is in nonblocking mode, and call must be done again.\n\n",sugg-info-all,8,CONT,functionality,ssh_connect,
5,10,Apiza,See also\nssh_new()\nssh_disconnect()\n\n```,sugg-info-all,9,CONT,,ssh_connect,
6,11,Programmer,new ssh session,eli-sugg,,,patterns,ssh_session,
7,12,Apiza,Here is a function that might help with a new SSH session:\n\n,sugg-info-all,11,POS,patterns,ssh_session ssh_new,
7,13,Apiza,```\nssh_session ssh_new\t(\tvoid \t\t)\n\n,sugg-info-all,12,CONT,basic,ssh_new,
7,14,Apiza,Description\nCreate a new ssh session.\n\n\n\n,sugg-info-all,13,CONT,basic,ssh_new,
7,15,Apiza,"Returns\nA new ssh_session pointer, NULL on error.\n\n```",sugg-info-all,14,CONT,functionality basic,ssh_new,
8,16,Programmer,ssh error,error,,,basic,,
9,17,Apiza,Two functions that might help are `ssh_get_error` and `ssh_get_error_code`.,sugg,16,POS,structure,ssh_get_error ssh_get_error_code,
9,18,Apiza,Let me know if you would like to see the documentation for either of them.,offer,17,FOL,basic,ssh_get_error ssh_get_error_code,
10,19,Programmer,ssh_get_error,eli-info-all,17,FOL,basic,ssh_get_error,
11,20,Apiza,Here you go:\n\n,info-all,19,POS,,ssh_get_error,
11,21,Apiza,```\nconst char* ssh_get_error\t(\tvoid * \terror\t)\n\n,info-all,20,CONT,basic,ssh_get_error,
11,22,Apiza,Description\nRetrieve the error text message from the last error.\n\n,info-all,21,CONT,functionality,ssh_get_error,
11,23,Apiza,Parameters\nerror: An ssh_session or ssh_bind.\n\n,info-all,22,CONT,basic,ssh_get_error,
11,24,Apiza,Returns\nA static string describing the error.\n\n\n```,info-all,23,CONT,functionality basic,ssh_get_error,
12,25,Programmer,authetication,eli-sugg,,,patterns,,
13,26,Apiza,There are lots of functions that might be relevant. ,sugg-info-all,25,PART,patterns structure,,
13,27,Apiza,Here is one:\n\n,sugg-info-all,25,POS,patterns,ssh_channel_open_auth_agent,
13,28,Apiza,```\nint ssh_channel_open_auth_agent\t(\tssh_channel \tchannel\t)\n\n,sugg-info-all,27,CONT,basic,ssh_channel_open_auth_agent,
13,29,Apiza,Description\nOpen an agent authentication forwarding channel.\nThis type of channel can be opened by a server towards a client in order to provide SSH-Agent services to the server-side process. This channel can only be opened if the client claimed support by sending a channel request beforehand.\n\n,sugg-info-all,28,CONT,functionality purpose directives,ssh_channel_open_auth_agent,
13,30,Apiza,Parameters\nchannel: An allocated channel.\n\n,sugg-info-all,29,CONT,basic,ssh_channel_open_auth_agent,
13,31,Apiza,"Returns\nSSH_OK on success, SSH_ERROR if an error occurred, SSH_AGAIN if in nonblocking mode and call has to be done again.\n\n",sugg-info-all,30,CONT,functionality,ssh_channel_open_auth_agent,
13,32,Apiza,See also\nssh_channel_open_forward()\n\n\n```,sugg-info-all,31,CONT,,ssh_channel_open_auth_agent,
14,33,Programmer,check that the host is known,eli-sugg,,,patterns,,
15,34,Apiza,Here is a function that might help check if the host is known:\n\n,sugg-info-all,33,POS,patterns,ssh_is_server_known,
15,35,Apiza,```\nint ssh_is_server_known\t(\tssh_session \tsession\t)\n\n,sugg-info-all,34,CONT,basic,ssh_is_server_known,
15,36,Apiza,Description\nCheck if the server is known.\nChecks the user's known host file for a previous connection to the current server.\n\n,sugg-info-all,35,CONT,functionality,ssh_is_server_known,
15,37,Apiza,Parameters\nsession: The SSH session to use.\n\n,sugg-info-all,36,CONT,basic,ssh_is_server_known,
15,38,Apiza,Returns\nSSH_SERVER_KNOWN_OK: The server is known and has not changed.\nSSH_SERVER_KNOWN_CHANGED: The server key has changed. Either you are under attack or the administrator changed the key. You HAVE to warn the user about a possible attack.\nSSH_SERVER_FOUND_OTHER: The server gave use a key of a type while we had an other type recorded. It is a possible attack.\nSSH_SERVER_NOT_KNOWN: The server is unknown. User should confirm the MD5 is correct.\nSSH_SERVER_FILE_NOT_FOUND: The known host file does not exist. The host is thus unknown. File will be created if host key is accepted.\nSSH_SERVER_ERROR: Some error happened.\n\n,sugg-info-all,37,CONT,functionality,ssh_is_server_known,
15,39,Apiza,See also\nssh_get_pubkey_hash()\n,sugg-info-all,38,CONT,,ssh_is_server_known,
15,40,Apiza,Bug:\nThere is no current way to remove or modify an entry into the known host table.\n\n\n```,sugg-info-all,39,CONT,quality,ssh_is_server_known,
16,41,Programmer,authenticate the user to the server.,elaborate,32,FOL,patterns,,
17,42,Programmer,disconnect from the server,eli-sugg,,,patterns,,
18,43,Programmer,free the session,eli-sugg,,,patterns,ssh_session,
19,44,Apiza,This function might help authenticate the user:\n\n,sugg-info-all,41,POS,patterns,ssh_userauth_agent,
19,45,Apiza,"```\nint ssh_userauth_agent\t(\tssh_session \tsession,\nconst char * \tusername \n)\n\n",sugg-info-all,44,CONT,basic,ssh_userauth_agent,
19,46,Apiza,Description\nTry to do public key authentication with ssh agent.\n\n,sugg-info-all,45,CONT,functionality,ssh_userauth_agent,
19,47,Apiza,"Parameters\nsession: The ssh session to use.\nusername: The username, this SHOULD be NULL.\n\n",sugg-info-all,46,CONT,functionality directives,ssh_userauth_agent,
19,48,Apiza,"Returns\nSSH_AUTH_ERROR: A serious error happened.\nSSH_AUTH_DENIED: The server doesn't accept that public key as an authentication token. Try another key or another method.\nSSH_AUTH_PARTIAL: You've been partially authenticated, you still have to use another method.\nSSH_AUTH_SUCCESS: The public key is accepted, you want now to use ssh_userauth_publickey().\nSSH_AUTH_AGAIN: In nonblocking mode, you've got to call this again later.\n",sugg-info-all,47,CONT,functionality,ssh_userauth_agent,
19,49,Apiza,Note\nMost server implementations do not permit changing the username during authentication. The username should only be set with ssh_options_set() only before you connect to the server.\n\n```,sugg-info-all,48,CONT,functionality directives,ssh_userauth_agent,
20,50,Apiza,This function might help disconnect from the server:\n\n,sugg-info-all,42,POS,patterns,ssh_disconnect,
20,51,Apiza,```\nvoid ssh_disconnect\t(\tssh_session \tsession\t)\n\n,sugg-info-all,50,CONT,basic,ssh_disconnect,
20,52,Apiza,Description\nDisconnect from a session (client or server).\nThe session can then be reused to open a new session.\n\n,sugg-info-all,51,CONT,functionality patterns,ssh_disconnect,
20,53,Apiza,Parameters\nsession: The SSH session to use.\n\n\n\n```,sugg-info-all,52,CONT,basic,ssh_disconnect,
21,54,Apiza,This function might help free the session:\n\n,sugg-info-all,42,POS,patterns,ssh_session ssh_free,
21,55,Apiza,```\nvoid ssh_free\t(\tssh_session \tsession\t)\n\n,sugg-info-all,54,CONT,basic,ssh_free,
21,56,Apiza,Description\nDeallocate a SSH session handle.\n\n,sugg-info-all,55,CONT,functionality,ssh_free,
21,57,Apiza,Parameters\nsession: The SSH session to free.\n\n,sugg-info-all,56,CONT,basic,ssh_free,
21,58,Apiza,See also\nssh_disconnect()\nssh_new()\n\n```,sugg-info-all,57,CONT,,ssh_free,
22,59,Programmer,open ssh_channel,eli-sugg,,,patterns,ssh_channel,
23,60,Programmer,Execute a command on the open channel.,eli-sugg,,,patterns,ssh_channel,
24,61,Programmer,read response from the channel,eli-sugg,,,patterns,ssh_channel,
25,62,Programmer,shut down channel,eli-sugg,,,patterns,ssh_channel,
26,63,Programmer,free the channel,eli-sugg,,,patterns,ssh_channel,
27,64,Apiza,There are lots of functions that might help open ssh_channel.,sugg-info-all,59,PART,patterns,ssh_channel,
27,65,Apiza,Here's one:\n\n,sugg-info-all,59,POS,patterns,ssh_channel_open_session,
27,66,Apiza,```\nint ssh_channel_open_session\t(\tssh_channel \tchannel\t)\n\n,sugg-info-all,65,CONT,basic,ssh_channel_open_session,
27,67,Apiza,"Description\nOpen a session channel (suited for a shell, not TCP forwarding).\n\n",sugg-info-all,66,CONT,functionality purpose,ssh_channel_open_session,
27,68,Apiza,Parameters\nchannel: An allocated channel.\n\n,sugg-info-all,67,CONT,basic,ssh_channel_open_session,
27,69,Apiza,"Returns\nSSH_OK on success, SSH_ERROR if an error occurred, SSH_AGAIN if in nonblocking mode and call has to be done again.\n\n",sugg-info-all,68,CONT,functionality,ssh_channel_open_session,
27,70,Apiza,See also\nssh_channel_open_forward()\nssh_channel_request_env()\nssh_channel_request_shell()\nssh_channel_request_exec()\n\n```,sugg-info-all,69,CONT,,ssh_channel_open_session,
28,71,Apiza,Here is a function that might help execute a command:\n\n,sugg-info-all,60,POS,patterns,ssh_channel_request_exec,
28,72,Apiza,"```\nint ssh_channel_request_exec\t(\tssh_channel \tchannel,\nconst char * \tcmd \n)\n\n",sugg-info-all,71,CONT,basic,ssh_channel_request_exec,
28,73,Apiza,Description\nRun a shell command without an interactive shell.\nThis is similar to \'sh -c command\'.\n\n,sugg-info-all,72,CONT,functionality,ssh_channel_request_exec,
28,74,Apiza,"Parameters\nchannel: The channel to execute the command.\ncmd: The command to execute (e.g. ""ls ~/ -al | grep -i reports"").\n\n",sugg-info-all,73,CONT,functionality examples,ssh_channel_request_exec,
28,75,Apiza,"Returns\nSSH_OK on success, SSH_ERROR if an error occurred, SSH_AGAIN if in nonblocking mode and call has to be done again.\n",sugg-info-all,74,CONT,functionality,ssh_channel_request_exec,
28,76,Apiza,"Example:\n\nrc = channel_request_exec(channel, ""ps aux"");\nif (rc &gt; 0) {\n return -1;\n}\nwhile ((rc = channel_read(channel, buffer, sizeof(buffer), 0)) &gt; 0) {\n if (fwrite(buffer, 1, rc, stdout) != (unsigned int) rc) {\n return -1;\n }\n}\n\nSee also\nssh_channel_request_shell()\n\n\n\n```",sugg-info-all,75,CONT,examples,ssh_channel_request_exec,
29,77,Apiza,Here is a function that might help read a response:\n\n,sugg-info-all,61,POS,patterns,ssh_channel_read,
29,78,Apiza,"```\nint ssh_channel_read\t(\tssh_channel \tchannel,\nvoid * \tdest,\nuint32_t \tcount,\nint \tis_stderr \n)\n\n",sugg-info-all,77,CONT,basic,ssh_channel_read,
29,79,Apiza,Description\nReads data from a channel.\n\n,sugg-info-all,78,CONT,basic,ssh_channel_read,
29,80,Apiza,Parameters\nchannel: The channel to read from.\ndest: The destination buffer which will get the data.\ncount: The count of bytes to be read.\nis_stderr: A boolean value to mark reading from the stderr flow.\n\n,sugg-info-all,79,CONT,functionality,ssh_channel_read,
29,81,Apiza,"Returns\nThe number of bytes read, 0 on end of file or SSH_ERROR on error. In nonblocking mode it Can return 0 if no data is available or SSH_AGAIN.\n\n```",sugg-info-all,80,CONT,functionality,ssh_channel_read,
30,82,Programmer,new channel,eli-sugg,,,patterns,ssh_channel,
31,83,Apiza,Here is a function that might help shut down the channel:\n\n,sugg-info-all,62,POS,patterns,ssh_channel ssh_scp_close,
31,84,Apiza,```\nint ssh_scp_close\t(\tssh_scp \tscp\t)\n\n,sugg-info-all,83,CONT,basic,ssh_scp_close,
31,85,Apiza,Description\nClose the scp channel.\n\n,sugg-info-all,84,CONT,basic,ssh_scp_close,
31,86,Apiza,Parameters\nscp: The scp context to close.\n\n,sugg-info-all,85,CONT,basic,ssh_scp_close,
31,87,Apiza,Returns\nSSH_OK on success or an SSH error code.\n\n,sugg-info-all,86,CONT,functionality,ssh_scp_close,
31,88,Apiza,See also\nssh_scp_init()\n\n\n\n```,sugg-info-all,87,CONT,,ssh_scp_close,
32,89,Apiza,Here is a function that might help free the channel:\n\n,sugg-info-all,63,POS,patterns,ssh_channel ssh_channel_free,
32,90,Apiza,```\nvoid ssh_channel_free\t(\tssh_channel \tchannel\t)\n\n,sugg-info-all,89,CONT,basic,ssh_channel_free,
32,91,Apiza,Description\nClose and free a channel.\n\n,sugg-info-all,90,CONT,basic,ssh_channel_free,
32,92,Apiza,Parameters\nchannel: The channel to free.\n\n```,sugg-info-all,91,CONT,basic,ssh_channel_free,
33,93,Apiza,Here is a function that might help get a new channel:\n\n,sugg-info-all,82,POS,patterns,ssh_channel ssh_channel_new,
33,94,Apiza,```\nssh_channel ssh_channel_new\t(\tssh_session \tsession\t)\n\n,sugg-info-all,93,CONT,basic,ssh_channel_new,
33,95,Apiza,Description\nAllocate a new channel.\n\n,sugg-info-all,94,CONT,basic,ssh_channel_new,
33,96,Apiza,Parameters\nsession: The ssh session to use.\n\n,sugg-info-all,95,CONT,basic,ssh_channel_new,
33,97,Apiza,"Returns\nA pointer to a newly allocated channel, NULL on error.\n\n```",sugg-info-all,96,CONT,functionality,ssh_channel_new,
34,98,Programmer,get error from channel,sugg-info-all,,,patterns,ssh_channel,
35,99,Apiza,Here is a function that might help get an error:\n,sugg-info-all,98,POS,patterns,ssh_get_error,
35,100,Apiza,```\nconst char* ssh_get_error\t(\tvoid * \terror\t)\n\n,sugg-info-all,99,CONT,basic,ssh_get_error,
35,101,Apiza,Description\nRetrieve the error text message from the last error.\n\n,sugg-info-all,100,CONT,functionality,ssh_get_error,
35,102,Apiza,Parameters\nerror: An ssh_session or ssh_bind.\n\n,sugg-info-all,101,CONT,basic,ssh_get_error,
35,103,Apiza,Returns\nA static string describing the error.\n\n\n```,sugg-info-all,102,CONT,functionality,ssh_get_error,
36,104,Programmer,sending the eof,eli-sugg,,,patterns,,
37,105,Apiza,Here is a function that might help send the eof:\n\n,sugg-info-all,104,POS,patterns,ssh_channel_send_eof,
37,106,Apiza,```\nint ssh_channel_send_eof\t(\tssh_channel \tchannel\t)\n\n,sugg-info-all,105,CONT,basic,ssh_channel_send_eof,
37,107,Apiza,Description\nSend an end of file on the channel.\nThis doesn't close the channel. You may still read from it but not write.\n\n,sugg-info-all,106,CONT,functionality,ssh_channel_send_eof,
37,108,Apiza,Parameters\nchannel: The channel to send the eof to.\n\n,sugg-info-all,107,CONT,basic,ssh_channel_send_eof,
37,109,Apiza,"Returns\nSSH_OK on success, SSH_ERROR if an error occurred.\n",sugg-info-all,108,CONT,functionality,ssh_channel_send_eof,
37,110,Apiza,"Example:\n\nrc = ssh_channel_send_eof(channel);\nif (rc == SSH_ERROR) {\n return -1;\n}\nwhile(!ssh_channel_is_eof(channel)) {\n rc = ssh_channel_read(channel, buf, sizeof(buf), 0);\n if (rc == SSH_ERROR) {\n return -1;\n }\n}\nssh_channel_close(channel);\n\nSee also\nssh_channel_close()\nssh_channel_free()\nssh_channel_is_eof()\n\n\n\n```",sugg-info-all,109,CONT,examples,ssh_channel_send_eof,
38,111,Programmer,close channel,eli-sugg,,,patterns,ssh_channel_close,
39,112,Apiza,Here is a function that might help close the channel:\n\n,sugg-info-all,111,POS,patterns,ssh_channel_close,
39,113,Apiza,```\nint ssh_channel_close\t(\tssh_channel \tchannel\t)\n\n,sugg-info-all,112,CONT,basic,ssh_channel_close,
39,114,Apiza,Description\nClose a channel.\nThis sends an end of file and then closes the channel. You won't be able to recover any data the server was going to send or was in buffers.\n\n,sugg-info-all,113,CONT,functionality,ssh_channel_close,
39,115,Apiza,Parameters\nchannel: The channel to close.\n\n,sugg-info-all,114,CONT,basic,ssh_channel_close,
39,116,Apiza,"Returns\nSSH_OK on success, SSH_ERROR if an error occurred.\n\n",sugg-info-all,115,CONT,functionality,ssh_channel_close,
39,117,Apiza,See also\nssh_channel_free()\nssh_channel_is_eof()\n```,sugg-info-all,116,CONT,patterns examples basic,ssh_channel_close,
40,118,Programmer,new sftp_session,eli-sugg,,,patterns,sftp_session,
41,119,Programmer,Create a new directory,eli-sugg,,,patterns,,
42,120,Programmer,Create a new file,eli-sugg,,,patterns,,
43,121,Apiza,Here is a function that might help get a new sftp session:\n\n,sugg-info-all,118,POS,patterns,sftp_session,
43,122,Apiza,```\nsftp_session sftp_new\t(\tssh_session \tsession\t)\n\n,sugg-info-all,121,CONT,basic,sftp_new,
43,123,Apiza,Description\nStart a new sftp session.\n\n,sugg-info-all,122,CONT,basic,sftp_new,
43,124,Apiza,Parameters\nsession: The ssh session to use.\n\n,sugg-info-all,123,CONT,basic,sftp_new,
43,125,Apiza,Returns\nA new sftp session or NULL on error.\n\n,sugg-info-all,124,CONT,functionality basic,sftp_new,
43,126,Apiza,See also\nsftp_free()\n```,sugg-info-all,125,CONT,,sftp_new,
44,127,Programmer,Write to the file,eli-sugg,,,patterns,,
45,128,Apiza,Here is a function that might help create a new directory:\n\n,sugg-info-all,119,POS,patterns,sftp_mkdir,
45,129,Apiza,"```\nint sftp_mkdir\t(\tsftp_session \tsftp,\nconst char * \tdirectory,\nmode_t \tmode \n)\n\n",sugg-info-all,128,CONT,basic,sftp_mkdir,
45,130,Apiza,Description\nCreate a directory.\n\n,sugg-info-all,129,CONT,basic,sftp_mkdir,
45,131,Apiza,Parameters\nsftp: The sftp session handle.\ndirectory: The directory to create.\nmode: Specifies the permissions to use. It is modified by the process's umask in the usual way: The permissions of the created file are (mode &amp; ~umask)\n\n,sugg-info-all,130,CONT,functionality,sftp_mkdir,
45,132,Apiza,"Returns\n0 on success, &lt; 0 on error with ssh and sftp error set.\n\n",sugg-info-all,131,CONT,functionality,sftp_mkdir,
45,133,Apiza,See also\nsftp_get_error()\n\n```,sugg-info-all,132,CONT,,sftp_mkdir,
46,134,Apiza,Here is a function that might help create a new file:\n\n,sugg-info-all,120,POS,patterns,sftp_open,
46,135,Apiza,"```\nsftp_file sftp_open\t(\tsftp_session \tsession,\nconst char * \tfile,\nint \taccesstype,\nmode_t \tmode \n)\n\n",sugg-info-all,134,CONT,basic,sftp_open,
46,136,Apiza,Description\nOpen a file on the server.\n\n,sugg-info-all,135,CONT,basic,sftp_open,
46,137,Apiza,"Parameters\nsession: The sftp session handle.\nfile: The file to be opened.\naccesstype: Is one of O_RDONLY, O_WRONLY or O_RDWR which request opening the file read-only,write-only or read/write. Acesss may also be bitwise-or'd with one or more of the following: O_CREAT - If the file does not exist it will be created. O_EXCL - When used with O_CREAT, if the file already exists it is an error and the open will fail. O_TRUNC - If the file already exists it will be truncated.\nmode: Mode specifies the permissions to use if a new file is created. It is modified by the process's umask in the usual way: The permissions of the created file are (mode &amp; ~umask)\n\n",sugg-info-all,136,CONT,functionality,sftp_open,
46,138,Apiza,"Returns\nA sftp file handle, NULL on error with ssh and sftp error set.\n\n",sugg-info-all,137,CONT,functionality,sftp_open,
46,139,Apiza,See also\nsftp_get_error()\n\n```,sugg-info-all,138,CONT,,sftp_open,
47,140,Apiza,Here is a function that might help write to the file:\n\n,sugg-info-all,127,POS,patterns,sftp_write,
47,141,Apiza,"```\nssize_t sftp_write\t(\tsftp_file \tfile,\nconst void * \tbuf,\nsize_t \tcount \n)\n\n",sugg-info-all,140,CONT,basic,sftp_write,
47,142,Apiza,Description\nWrite to a file using an opened sftp file handle.\n\n,sugg-info-all,141,CONT,functionality,sftp_write,
47,143,Apiza,Parameters\nfile: Open sftp file handle to write to.\nbuf: Pointer to buffer to write data.\ncount: Size of buffer in bytes.\n\n,sugg-info-all,142,CONT,functionality,sftp_write,
47,144,Apiza,"Returns\nNumber of bytes written, &lt; 0 on error with ssh and sftp error set.\n\n",sugg-info-all,143,CONT,functionality,sftp_write,
47,145,Apiza,See also\nsftp_open()\nsftp_read()\nsftp_close()\n\n\n```,sugg-info-all,144,CONT,,sftp_write,
48,146,Programmer,sftp get error,eli-sugg,,,patterns,,
49,147,Apiza,Here is the documentation for `sftp_get_error`:\n\n,sugg-info-all,146,POS,,sftp_get_error,
49,148,Apiza,```\nint sftp_get_error\t(\tsftp_session \tsftp\t)\n\n,sugg-info-all,147,CONT,basic,sftp_get_error,
49,149,Apiza,Description\nGet the last sftp error.\nUse this function to get the latest error set by a posix like sftp function.\n\n,sugg-info-all,148,CONT,functionality,sftp_get_error,
49,150,Apiza,Parameters\nsftp: The sftp session where the error is saved.\n\n,sugg-info-all,149,CONT,functionality,sftp_get_error,
49,151,Apiza,"Returns\nThe saved error (see server responses), &lt; 0 if an error in the function occured.\n\n",sugg-info-all,150,CONT,functionality,sftp_get_error,
49,152,Apiza,See also\nServer responses\n\n```,sugg-info-all,151,CONT,,sftp_get_error,
50,153,Programmer,Server responses,eli-info-all,,,concepts,,
51,154,Apiza,I couldn't find anything like that in the LibSSH documentation.,give-up,153,UNC,,,
51,155,Apiza, Here is a web link that might help:\n\n,info,153,POS,references,,
51,156,Apiza,<https://winscp.net/eng/docs/sftp_codes>,info,155,CONT,references,,
52,157,Programmer,sftp error code,eli-info-all,,,structure,,
53,158,Apiza,I couldn't find anything like that in the LibSSH documentation.,give-up,157,UNC,,,
53,159,Apiza,Here is a web link that might help:\n\n,info,157,POS,references,,
53,160,Apiza,<https://www.secureblackbox.com/kb/help/ref_err_sftperrorcodes.html>,info,159,CONT,references,,