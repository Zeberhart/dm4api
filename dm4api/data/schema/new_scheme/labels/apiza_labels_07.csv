line,id,speaker,text,ami_label,link,relationship,api_labels,topic,entities
1,0,Programmer,create ssh_session,ELICIT-OFFER-OR-SUGGESTION,,,patterns,ssh_session,
2,1,Programmer,How do I create an ssh session?,OTHER,0,REP,patterns,ssh_session,
3,2,Programmer,How do I create an ssh session?,OTHER,1,REP,patterns,ssh_session,
4,3,Apiza,Hello! ,BE-POSITIVE,,,,,
4,4,Apiza,My name is Apiza!,INFORM,,,,,
5,5,Programmer,Hi,BE-POSITIVE,3,POS,,,
6,6,Programmer,How do I create an ssh session,ELICIT-OFFER-OR-SUGGESTION,2,REP,patterns,ssh_session,
7,7,Apiza,"To create a new ssh session, use ssh_new with this signature: ",SUGGEST,6,POS,patterns,ssh_session ssh_new,
7,8,Apiza,ssh_session ssh_new (void),INFORM,7,CONT,basic,ssh_new,
8,9,Programmer,How do I ensure a session was successfully created?,ELICIT-INFORM,7,FOL,functionality,ssh_new ssh_session,
9,10,Apiza,"If an error occurs, null will be returned",INFORM,9,POS,functionality,ssh_new,
10,11,Programmer,expected expression before void,ELICIT-INFORM,7,FOL,functionality,ssh_new,
11,12,Apiza,"I'm sorry, ",BE-POSITIVE,11,UNC,,,
11,13,Apiza,I'm not sure what this is referring to. ,COMMENT-ABOUT-UNDERSTANDING,12,CONT,,,
11,14,Apiza,I can only answer API questions.,INFORM,13,FOL,,,
12,15,Programmer,Connect to localhost,ELICIT-OFFER-OR-SUGGESTION,,,patterns,,
13,16,Apiza,"To connect, use ssh_connect ",SUGGEST,15,POS,patterns,ssh_connect,
13,17,Apiza,with this signature: int ssh_connect (ssh_session session),INFORM,16,CONT,basic,ssh_connect,
14,18,Programmer,authenticate,ELICIT-OFFER-OR-SUGGESTION,,,patterns,,
15,19,Apiza,"I'm sorry, ",BE-POSITIVE,18,PART,,,
15,20,Apiza,there are several authentication methods. ,INFORM,19,CONT,structure,,
15,21,Apiza,Would you like me to list them?,ELICIT-OFFER-OR-SUGGESTION,20,FOL,structure,,
16,22,Programmer,yes,SUGGEST,21,POS,structure,,
17,23,Apiza,ssh_userauth_gssapi\nssh_userauth_kbdint\nssh_userauth_none\nssh_userauth_password\nssh_userauth_publickey\nssh_userauth_publickey_auto\nssh_userauth_try_publickey,INFORM,18,POS,structure,,
18,24,Programmer,ssh_userauth_password,ELICIT-INFORM,23,FOL,basic,ssh_userauth_password,
19,25,Apiza,"This method's signature is: int ssh_userauth_password (ssh_session session, const char * username, const char *password)",INFORM,24,POS,basic,ssh_userauth_password,
20,26,Programmer,get error message,ELICIT-OFFER-OR-SUGGESTION,,,patterns,,
21,27,Apiza,"To get error message, use ssh_get_error",SUGGEST,26,POS,patterns,ssh_get_error,
21,28,Apiza,with this signature: const char* ssh_get_error ( void * error ),INFORM,27,CONT,basic,ssh_get_error,
22,29,Programmer,server,ELICIT-INFORM,,,basic,,
23,30,Apiza,"I'm sorry, ",BE-POSITIVE,29,NEG,,,
23,31,Apiza,I can only answer API questions,INFORM,30,CONT,,,
24,32,Programmer,Set server address,ELICIT-OFFER-OR-SUGGESTION,29,REP,patterns,,
25,33,Programmer,ssh_connect,ELICIT-INFORM,,,basic,ssh_connect,
26,34,Apiza,The method's signature is: int ssh_connect (ssh_session session),INFORM,33,POS,basic,ssh_connect,
27,35,Programmer,Check that host is known,ELICIT-OFFER-OR-SUGGESTION,,,patterns,,
28,36,Programmer,disconnect from server,ELICIT-OFFER-OR-SUGGESTION,,,patterns,,
29,37,Programmer,SSH Return codes,ELICIT-INFORM,,,structure,,
30,38,Apiza,"To check if the server is known, use ssh_is_server_known",SUGGEST,35,POS,patterns,ssh_is_server_known,
30,39,Apiza, with signature: int ssh_is_server_known ( ssh_session session ),INFORM,38,CONT,basic,ssh_is_server_known,
31,40,Programmer,set server for a session,ELICIT-OFFER-OR-SUGGESTION,,,patterns,ssh_session,
32,41,Programmer,set host for session,ELICIT-OFFER-OR-SUGGESTION,,,patterns,ssh_session,
33,42,Apiza,"To disconnect, use ssh_disconnect",SUGGEST,36,POS,patterns,ssh_disconnect,
33,43,Apiza,with signature: void ssh_disconnect ( ssh_session session ),INFORM,42,CONT,basic,ssh_disconnect,
34,44,Programmer,set host for a session,ELICIT-OFFER-OR-SUGGESTION,41,REP,patterns,ssh_session,
35,45,Apiza,"I'm sorry, ",BE-POSITIVE,44,UNC,,,
35,46,Apiza,I don't understand your question,COMMENT-ABOUT-UNDERSTANDING,45,CONT,,,
36,47,Programmer,host address,ELICIT-OFFER-OR-SUGGESTION,,,basic,,
37,48,Apiza,"I'm sorry, ",BE-POSITIVE,47,UNC,,,
37,49,Apiza,I don't understand your question,COMMENT-ABOUT-UNDERSTANDING,48,CONT,,,
38,50,Programmer,how to set the host address for a session,ELICIT-OFFER-OR-SUGGESTION,44,REP,patterns,ssh_session,
39,51,Apiza,"I'm sorry, ",BE-POSITIVE,50,UNC,,,
39,52,Apiza,I don't understand your question,COMMENT-ABOUT-UNDERSTANDING,51,CONT,,,
40,53,Programmer,How to set host for session,ELICIT-OFFER-OR-SUGGESTION,50,REP,patterns,ssh_session,
41,54,Programmer,error codes in libssh,ELICIT-INFORM,,,structure,,
42,55,Programmer,ssh_options_set,ELICIT-INFORM,,,basic,ssh_options_set,
43,56,Apiza,"This method's signature is int ssh_options_set( ssh_session session, enum ssh_options_e type, const void * value )",INFORM,55,POS,basic,ssh_options_set,
44,57,Programmer,ssh options host,ELICIT-INFORM,56,FOL,patterns, ssh_options_set ssh_options_e,
45,58,Programmer,free ssh session,ELICIT-OFFER-OR-SUGGESTION,,,patterns,ssh_session,
46,59,Apiza,"To get options, use method ssh_options_get",SUGGEST,57,PART,patterns,ssh_options_get,
46,60,Apiza,"with signature: int ssh_options_get (ssh_session \tsession, enum ssh_options_e type, char ** \tvalue )",INFORM,59,CONT,basic,ssh_options_get,
47,61,Programmer,ssh_options_set host,ELICIT-INFORM,57,REP,patterns,ssh_options_set,
48,62,Apiza,"To deallocate a SSH session handle, use method ss_free",SUGGEST,58,POS,patterns,ssh_free,
48,63,Apiza,with this signature: void ssh_free ( ssh_session session ),INFORM,62,CONT,basic,ssh_free,
49,64,Apiza,"This method's signature is int ssh_options_set( ssh_session session, enum ssh_options_e type, const void * value )",INFORM,61,PART,basic,ssh_options_set,
50,65,Programmer,ssh_options enum,ELICIT-INFORM,64,FOL,structure,ssh_options_e ssh_options_set,
51,66,Programmer,SSH_OK,ELICIT-INFORM,,,basic,,
52,67,Apiza,Enum values: ,OTHER,65,POS,structure,ssh_options_e ssh_options_set,
52,68,Apiza,"Parameters\nsession: An allocated SSH session structure.\ntype: The option type to set. This could be one of the following:\nSSH_OPTIONS_HOST: The hostname or ip address to connect to (const char *).\nSSH_OPTIONS_PORT: The port to connect to (unsigned int).\nSSH_OPTIONS_PORT_STR: The port to connect to (const char *).\nSSH_OPTIONS_FD: The file descriptor to use (socket_t).\n\nIf you wish to open the socket yourself for a reason or another, set the file descriptor. Don't forget to set the hostname as the hostname is used as a key in the known_host mechanism.\nSSH_OPTIONS_BINDADDR: The address to bind the client to (const char *).\nSSH_OPTIONS_USER: The username for authentication (const char *).\n\nIf the value is NULL, the username is set to the default username.\nSSH_OPTIONS_SSH_DIR: Set the ssh directory (const char *,format string).\n\nIf the value is NULL, the directory is set to the default ssh directory.",INFORM,67,CONT,functionality directives,ssh_options_e ssh_options_set,
53,69,Apiza,"The ssh directory is used for files like known_hosts and identity (private and public key). It may include ""%s"" which will be replaced by the user home directory.\nSSH_OPTIONS_KNOWNHOSTS: Set the known hosts file name (const char *,format string).\n\nIf the value is NULL, the directory is set to the default known hosts file, normally ~/.ssh/known_hosts.\n\nThe known hosts file is used to certify remote hosts are genuine. It may include ""%d"" which will be replaced by the user home directory.\nSSH_OPTIONS_GLOBAL_KNOWNHOSTS: Set the global known hosts file name (const char *,format string).\n\nIf the value is NULL, the directory is set to the default global known hosts file, normally /etc/ssh/ssh_known_hosts.\n\nThe known hosts file is used to certify remote hosts are genuine.\nSSH_OPTIONS_ADD_IDENTITY (or SSH_OPTIONS_IDENTITY): Add a new identity file (const char *, format string) to the identity list.\n\nBy default identity, id_dsa and id_rsa are checked.\n\nThe identity used to authenticate with public key will be prepended to the list. It may include ""%s"" which will be replaced by the user home directory.\nSSH_OPTIONS_TIMEOUT: Set a timeout for the connection in seconds (long).\nSSH_OPTIONS_TIMEOUT_USEC: Set a timeout for the connection in micro seconds (long).\nSSH_OPTIONS_SSH1: Allow or deny the connection to SSH1 servers (int, 0 is false).\nSSH_OPTIONS_SSH2: Allow or deny the connection to SSH2 servers (int, 0 is false).\nSSH_OPTIONS_LOG_VERBOSITY: Set the session logging verbosity (int).\n\nThe verbosity of the messages. Every log smaller or equal to verbosity will be shown.\nSSH_LOG_NOLOG: No logging\nSSH_LOG_RARE: Rare conditions or warnings\nSSH_LOG_ENTRY: API-accessible entrypoints\nSSH_LOG_PACKET: Packet id and size\nSSH_LOG_FUNCTIONS: Function entering and leaving\nSSH_OPTIONS_LOG_VERBOSITY_STR: Set the session logging verbosity (const char *).\n\nThe verbosity of the messages. Every log smaller or equal to verbosity will be shown.\nSSH_LOG_NOLOG: No logging\nSSH_LOG_RARE: Rare conditions or warnings\nSSH_LOG_ENTRY: API-accessible entrypoints\nSSH_LOG_PACKET: Packet id and size\nSSH_LOG_FUNCTIONS: Function entering and leaving \nSee the corresponding numbers in libssh.h.\nSSH_OPTIONS_AUTH_CALLBACK: Set a callback to use your own authentication function (function pointer).\nSSH_OPTIONS_AUTH_USERDATA: Set the user data passed to the authentication function (generic pointer).\nSSH_OPTIONS_LOG_CALLBACK: Set a callback to use your own logging function (function pointer).\nSSH_OPTIONS_LOG_USERDATA: Set the user data passed to the logging function (generic pointer).\nSSH_OPTIONS_STATUS_CALLBACK: Set a callback to show connection status in realtime (function pointer).\n\nfn(void *arg, float status)",INFORM,68,CONT,functionality directives,ssh_options_e ssh_options_set,
54,70,Apiza,"During ssh_connect(), libssh will call the callback with status from 0.0 to 1.0.\nSSH_OPTIONS_STATUS_ARG: Set the status argument which should be passed to the status callback (generic pointer).\nSSH_OPTIONS_CIPHERS_C_S: Set the symmetric cipher client to server (const char *, comma-separated list).\nSSH_OPTIONS_CIPHERS_S_C: Set the symmetric cipher server to client (const char *, comma-separated list).\nSSH_OPTIONS_KEY_EXCHANGE: Set the key exchange method to be used (const char *, comma-separated list). ex: ""ecdh-sha2-nistp256,diffie-hellman-group14-sha1,diffie-hellman-group1-sha1""\nSSH_OPTIONS_HOSTKEYS: Set the preferred server host key types (const char *, comma-separated list). ex: ""ssh-rsa,ssh-dss,ecdh-sha2-nistp256""\nSSH_OPTIONS_COMPRESSION_C_S: Set the compression to use for client to server communication (const char *, ""yes"", ""no"" or a specific algorithm name if needed (""zlib"",""<mailto:zlib@openssh.com|zlib@openssh.com>"",""none"").\nSSH_OPTIONS_COMPRESSION_S_C: Set the compression to use for server to client communication (const char *, ""yes"", ""no"" or a specific algorithm name if needed (""zlib"",""<mailto:zlib@openssh.com|zlib@openssh.com>"",""none"").\nSSH_OPTIONS_COMPRESSION: Set the compression to use for both directions communication (const char *, ""yes"", ""no"" or a specific algorithm name if needed (""zlib"",""<mailto:zlib@openssh.com|zlib@openssh.com>"",""none"").\nSSH_OPTIONS_COMPRESSION_LEVEL: Set the compression level to use for zlib functions. (int, value from 1 to 9, 9 being the most efficient but slower).\nSSH_OPTIONS_STRICTHOSTKEYCHECK: Set the parameter StrictHostKeyChecking to avoid asking about a fingerprint (int, 0 = false).\nSSH_OPTIONS_PROXYCOMMAND: Set the command to be executed in order to connect to server (const char *).\nSSH_OPTIONS_GSSAPI_SERVER_IDENTITY Set it to specify the GSSAPI server identity that libssh should expect when connecting to the server (const char *).\nSSH_OPTIONS_GSSAPI_CLIENT_IDENTITY Set it to specify the GSSAPI client identity that libssh should expect when connecting to the server (const char *).\nSSH_OPTIONS_GSSAPI_DELEGATE_CREDENTIALS Set it to specify that GSSAPI should delegate credentials to the server (int, 0 = false).\nSSH_OPTIONS_PASSWORD_AUTH Set it if password authentication should be used in ssh_userauth_auto_pubkey(). (int, 0=false). Currently without effect (ssh_userauth_auto_pubkey doesn\'t use password authentication).\nSSH_OPTIONS_PUBKEY_AUTH Set it if pubkey authentication should be used in ssh_userauth_auto_pubkey(). (int, 0=false).\nSSH_OPTIONS_KBDINT_AUTH Set it if keyboard-interactive authentication should be used in ssh_userauth_auto_pubkey(). (int, 0=false). Currently without effect (ssh_userauth_auto_pubkey doesn\'t use keyboard-interactive authentication).\nSSH_OPTIONS_GSSAPI_AUTH Set it if gssapi authentication should be used in ssh_userauth_auto_pubkey(). (int, 0=false). Currently without effect (ssh_userauth_auto_pubkey doesn\'t use gssapi authentication).\nSSH_OPTIONS_NODELAY Set it to disable Nagle\'s Algorithm (TCP_NODELAY) on the session socket. (int, 0=false)\n",INFORM,69,CONT,functionality directives,ssh_options_e ssh_options_set,
54,71,Apiza,Parameters\nvalue: The value to set. This is a generic pointer and the datatype which is used should be set according to the type set.,INFORM,70,CONT,functionality,ssh_options_set,
55,72,Programmer,return values of ssh_connect,ELICIT-INFORM,,,functionality,ssh_connect,
56,73,Apiza,"Returns SSH_OK on success, SSH_ERROR on error.\nSSH_AGAIN, if the session is in nonblocking mode, and call must be done again.",INFORM,72,POS,functionality,ssh_connect,
57,74,Programmer,return values of ssh_is_server_known,ELICIT-INFORM,,,functionality,ssh_is_server_known,
58,75,Apiza,Returns SSH_SERVER_KNOWN_OK: The server is known and has not changed.\nSSH_SERVER_KNOWN_CHANGED: The server key has changed. Either you are under attack or the administrator changed the key. You HAVE to warn the user about a possible attack.\nSSH_SERVER_FOUND_OTHER: The server gave use a key of a type while we had an other type recorded. It is a possible attack.\nSSH_SERVER_NOT_KNOWN: The server is unknown. User should confirm the MD5 is correct.\nSSH_SERVER_FILE_NOT_FOUND: The known host file does not exist. The host is thus unknown. File will be created if host key is accepted.\nSSH_SERVER_ERROR: Some error happened.,INFORM,74,POS,functionality,ssh_is_server_known,
59,76,Programmer,ssh_server_is_known called without crytographic context,ELICIT-INFORM,,,functionality,ssh_is_server_known,
60,77,Apiza,"I'm sorry, ",BE-POSITIVE,76,UNC,,,
60,78,Apiza,I don't understand your question,COMMENT-ABOUT-UNDERSTANDING,77,CONT,,,
61,79,Programmer,return values of ssh_userauth_password,ELICIT-INFORM,,,functionality,ssh_userauth_password,
62,80,Apiza,"Returns\nSSH_AUTH_ERROR: A serious error happened.\nSSH_AUTH_DENIED: Authentication failed: use another method\nSSH_AUTH_PARTIAL: You've been partially authenticated, you still have to use another method\nSSH_AUTH_SUCCESS: Authentication success\nSSH_AUTH_AGAIN: In nonblocking mode, you've got to call this again later.\n",INFORM,79,POS,functionality,ssh_userauth_password,
62,81,Apiza,Note\nMost server implementations do not permit changing the username during authentication. The username should only be set with ssh_options_set() only before you connect to the server.,INFORM,80,CONT,directives,ssh_userauth_password,
63,82,Programmer,create new ssh_channel,ELICIT-OFFER-OR-SUGGESTION,,,patterns,ssh_channel,
64,83,Programmer,open ssh_channel,ELICIT-OFFER-OR-SUGGESTION,,,patterns,ssh_channel,
65,84,Programmer,who command on channel,ELICIT-OFFER-OR-SUGGESTION,,,patterns,ssh_channel,
66,85,Apiza,"To allocate a new channel, use ssh_channel_new",SUGGEST,82,POS,patterns,ssh_channel ssh_channel_new,
66,86,Apiza, with signature: ssh_channel ssh_channel_new ( ssh_session session ),INFORM,85,CONT,basic,ssh_channel_new,
67,87,Programmer,open an ssh channel,ELICIT-OFFER-OR-SUGGESTION,83,REP,patterns,ssh_channel,
68,88,Apiza,"To check if a channel is open, use ssh_channel_is_open",SUGGEST,87,NEG,patterns,ssh_channel_is_open,
68,89,Apiza, with signature: int ssh_channel_is_open ( ssh_channel channel ),INFORM,88,CONT,basic,ssh_channel_is_open,
69,90,Programmer,open a new ssh_channel,ELICIT-OFFER-OR-SUGGESTION,87,REP,patterns,ssh_channel,
70,91,Apiza,"To open a new session channel, use ssh_channel_open_session",SUGGEST,90,POS,patterns,ssh_channel ssh_channel_open_session,
70,92,Apiza,with signature: int ssh_channel_open_session ) ssh_channel channel,INFORM,91,CONT,basic,ssh_channel_open_session,
71,93,Programmer,return codes of ssh_channel_open_session,ELICIT-INFORM,91,FOL,functionality,ssh_channel_open_session,
72,94,Apiza,"Returns\nSSH_OK on success, SSH_ERROR if an error occurred, SSH_AGAIN if in nonblocking mode and call has to be done again.",INFORM,93,POS,functionality,ssh_channel_open_session,
73,95,Programmer,execute command on channel,ELICIT-OFFER-OR-SUGGESTION,,,patterns,ssh_channel,
74,96,Programmer,who command on channel,ELICIT-OFFER-OR-SUGGESTION,84,REP,patterns,ssh_channel,
75,97,Programmer,close channel,ELICIT-OFFER-OR-SUGGESTION,,,patterns,ssh_channel,
76,98,Programmer,free channel,ELICIT-OFFER-OR-SUGGESTION,,,patterns,ssh_channel,
77,99,Apiza,"To run a shell command without interactive shell, use ssh_channel_request_exec",SUGGEST,95,POS,patterns,ssh_channel ssh_channel_request_exec,
77,100,Apiza,"with signature: int ssh_channel_request_exec (\tssh_channel channel, const char * cmd )",INFORM,99,CONT,basic,ssh_channel_request_exec,
78,101,Apiza,"To close a channel, use ssh_channel_close",SUGGEST,97,POS,patterns,ssh_channel ssh_channel_close,
78,102,Apiza, with signature int ssh_channel_close ( ssh_channel channel ),INFORM,101,CONT,basic,ssh_channel_close,
79,103,Programmer,read response from channel,ELICIT-OFFER-OR-SUGGESTION,,,patterns,ssh_channel,
80,104,Apiza,"To read data from channel, use ssh_channel_read",SUGGEST,103,POS,patterns,ssh_channel ssh_channel_read,
80,105,Apiza," with signature int ssh_channel_read ( ssh_channel channel,\nvoid * \tdest, uint32_t \tcount, int is_stderr )",INFORM,104,CONT,basic,ssh_channel_read,
81,106,Programmer,who command,ELICIT-INFORM,96,REP,patterns,,
82,107,Apiza,"I'm sorry, ",BE-POSITIVE,106,UNC,,,
82,108,Apiza,I don't understand your question,COMMENT-ABOUT-UNDERSTANDING,107,CONT,,,
83,109,Programmer,print response to stdout,ELICIT-OFFER-OR-SUGGESTION,,,patterns,,
84,110,Programmer,print channel response to stdout,ELICIT-OFFER-OR-SUGGESTION,109,REP,patterns,,
85,111,Programmer,ssh_channel_read response count,ELICIT-INFORM,105,FOL,patterns,ssh_channel_read,
86,112,Apiza,"Returns\nThe number of bytes read, 0 on end of file or SSH_ERROR on error. In nonblocking mode it Can return 0 if no data is available or SSH_AGAIN.",INFORM,111,NEG,functionality,ssh_channel_read,
87,113,Programmer,return value of std_channel_read,ELICIT-INFORM,,,functionality,ssh_channel_read,
88,114,Apiza,"Returns\nThe number of bytes read, 0 on end of file or SSH_ERROR on error. In nonblocking mode it Can return 0 if no data is available or SSH_AGAIN.",INFORM,113,POS,functionality,ssh_channel_read,
89,115,Programmer,ssh_channel_read,ELICIT-INFORM,,,basic,ssh_channel_read,
90,116,Programmer,What does ssh_channel_read do?,ELICIT-INFORM,,,functionality,ssh_channel_read,
91,117,Apiza,"This signature for this method is int ssh_channel_read\t( ssh_channel \tchannel, void * dest, uint32_t count, int \tis_stderr )",INFORM,115,POS,basic,ssh_channel_read,
92,118,Apiza,ssh_channel_read reads data from a channel,INFORM,116,POS,functionality,ssh_channel_read,
93,119,Programmer,send data to channel,ELICIT-OFFER-OR-SUGGESTION,,,patterns,ssh_channel,
94,120,Programmer,write data to channel,ELICIT-OFFER-OR-SUGGESTION,,,patterns,ssh_channel,
95,121,Programmer,send EOF,ELICIT-OFFER-OR-SUGGESTION,,,patterns,,
96,122,Apiza,"To send an end of file on the channel, use ssh_channel_send_eof",SUGGEST,121,POS,patterns,ssh_channel ssh_channel_send_eof,
96,123,Apiza,with signature: int ssh_channel_send_eof ( ssh_channel channel ),INFORM,122,CONT,basic,ssh_channel_send_eof,
97,124,Programmer,create sftp session,ELICIT-OFFER-OR-SUGGESTION,,,patterns,sftp_session,
98,125,Apiza,"To create a new sftp server session, use sftp_server_new",SUGGEST,124,POS,patterns,sftp_session sftp_server_new,
98,126,Apiza,"with signature sftp_session sftp_server_new\t( ssh_session session, ssh_channel chan )",INFORM,125,CONT,basic,sftp_server_new,
99,127,Programmer,get open channel on ssh session,ELICIT-OFFER-OR-SUGGESTION,,,patterns,ssh_channel ssh_session,
100,128,Programmer,initialize sftp session,ELICIT-OFFER-OR-SUGGESTION,,,patterns,sftp_session,
101,129,Apiza,"To allocate a new channel, use ssh_channel_new",SUGGEST,127,PART,patterns,ssh_channel ssh_channel_new,
101,130,Apiza, with signature: ssh_channel ssh_channel_new ( ssh_session session ),INFORM,129,CONT,basic,ssh_channel_new,
102,131,Programmer,create a directory with sftp server,ELICIT-OFFER-OR-SUGGESTION,,,patterns,,
103,132,Apiza,"To initialize a new sftp channel with the server, use sftp_init",SUGGEST,128,POS,patterns,sftp_init,
103,133,Apiza, with signature: int sftp_init ( sftp_session sftp ),INFORM,132,CONT,basic,sftp_init,
104,134,Programmer,sftp_init return values,ELICIT-INFORM,133,FOL,functionality,sftp_init,
105,135,Apiza,To create a directory use sftp_mkdir,SUGGEST,131,POS,patterns,sftp_mkdir,
105,136,Apiza,"with signature int sftp_mkdir ( sftp_session sftp, const char * directory, mode_t mode )",INFORM,135,CONT,basic,sftp_mkdir,
106,137,Apiza,"Returns\n0 on success, &lt; 0 on error with ssh error set.",INFORM,134,POS,patterns,sftp_init,
107,138,Programmer,mode_t values for mkdir,ELICIT-INFORM,136,FOL,patterns,sftp_mkdir,
108,139,Apiza,mode: Specifies the permissions to use. It is modified by the process's umask in the usual way: The permissions of the created file are (mode &amp; ~umask),INFORM,138,POS,functionality,sftp_mkdir,
109,140,Programmer,create sftp,ELICIT-OFFER-OR-SUGGESTION,,,patterns,sftp_session,
110,141,Apiza,"To create a new sftp server session, use sftp_server_new",SUGGEST,140,POS,patterns,sftp_session sftp_server_new,
110,142,Apiza," with signature sftp_session sftp_server_new ( ssh_session session, ssh_channel chan )",INFORM,141,CONT,basic,sftp_server_new,
111,143,Programmer,file permissions enum,ELICIT-INFORM,139,FOL,structure,sftp_mkdir,
112,144,Apiza,"I'm sorry, ",BE-POSITIVE,143,UNC,,,
112,145,Apiza,I don't understand your question,COMMENT-ABOUT-UNDERSTANDING,144,CONT,,,
113,146,Programmer,mode_t enum values,ELICIT-INFORM,143,REP,structure,sftp_mkdir,
114,147,Programmer,create file with sftp,ELICIT-OFFER-OR-SUGGESTION,,,patterns,,
115,148,Programmer,write value to file with sftp,ELICIT-OFFER-OR-SUGGESTION,,,patterns,,
116,149,Apiza,"To write to a file, use sftp_write",SUGGEST,148,POS,patterns,sftp_write,
116,150,Apiza,"with signature ssize_t sftp_write ( sftp_file file, const void * buf, size_t count )",INFORM,149,CONT,basic,sftp_write,